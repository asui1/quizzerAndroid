name: Quizzer CI

on:
  pull_request:
    branches:
      - stable_release

env:
  KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
  KEY_STORE: ${{ github.workspace }}/KEYSTORE_NAME.jks
  STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
  PASSWORD: ${{ secrets.PASSWORD }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  VERSION_CODE: ${{ github.run_number }}


jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Set up Docker container
        run: docker pull asui1/android_ci:android

      - name: Run Unit Tests
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            asui1/android_ci:android \
            ./gradlew build

      - name: Save Unit Test Results
        run: echo "UNIT_TESTS=${{ job.status }}" >> $GITHUB_ENV

  end-to-end-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Set up Docker container
        run: docker pull asui1/android_ci:android

      - name: Run End-to-End Tests
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            asui1/android_ci:android \
            ./gradlew connectedCheck

      - name: Save End-to-End Test Results
        run: echo "END_TO_END_TESTS=${{ job.status }}" >> $GITHUB_ENV

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Set up Docker container
        run: docker pull asui1/android_ci:android

      - name: Build Release AAB
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            asui1/android_ci:android \
            ./gradlew bundleRelease -PversionCode=$VERSION_CODE

      - name: Upload AAB
        id: uploadArtifact
        uses: actions/upload-artifact@v4
        with:
          name: app_${{ github.run_number }}
          path: app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: error

      - name: Create service_account.json
        id: createServiceAccount
        run: echo '${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}' > service_account.json

      - name: Read Release Notes
        id: readReleaseNotes
        run: echo "RELEASE_NOTES=$(cat release-notes.txt)" >> $GITHUB_ENV

      - name: Deploy to Google Play Store
        id: deploy
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.asu1.quizzer
          status: completed
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          releaseNotes: ${{ env.RELEASE_NOTES }}

      - name: Save Deploy Results
        run: echo "DEPLOY=${{ job.status }}" >> $GITHUB_ENV

  send-result:
    runs-on: ubuntu-latest
    needs: [unit-tests, end-to-end-tests, deploy]
    if: always()
    steps:
      - name: Send Email with CI Results
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: ${{ env.DEPLOY == 'success' && 'CI Success for' || 'CI Failure for' }} ${{ github.repository }}
          body: |
            CI build for ${{ github.repository }} has completed.
            - Job status: ${{ job.status }}
            - Unit Tests: ${{ env.UNIT_TESTS }}
            - End-to-End Tests: ${{ env.END_TO_END_TESTS }}
            - Deploy: ${{ env.DEPLOY }}
            - Commit: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            - Branch: ${{ github.ref }}
            - [GitHub Repository](https://github.com/asui1/quizzerAndroid)
          to: whwkd122@gmail.com
          from: quizzerCI@example.com