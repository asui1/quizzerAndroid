name: Quizzer CI

on:
  push:
    branches:
      - stable_release
  pull_request:
    branches:
      - stable_release

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION_CODE: ${{ github.run_number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up SDK
        uses:  android-actions/setup-android@v2

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set Time Zone
        run: sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate google-services.json
        run: echo '${{ secrets.GOOGLE_SECRETS }}' > ./app/google-services.json;

      - name: Decode keystore
        run: |
          echo "$KEY_STORE" > KEYSTORE_NAME.b64
          base64 -d -i KEYSTORE_NAME.b64 > KEYSTORE_NAME.jks
        env:
            KEY_STORE: ${{ secrets.ENCODED_KEYSTORE }}

      - name: Setup Lottie Files
        run: |
            mkdir -p ./app/src/main/assets/lottie
            lotties=(
              "load_dark.lottie"
              "load_light.lottie"
              "scoring_dark.lottie"
              "scoring_light.lottie"
              "upload.lottie"
              "userrank.lottie"
            )
            for file in "${lotties[@]}"; do
              curl -u asu1:${{ secrets.PASSWORD }} -o ./app/src/main/assets/lottie/$file https://quizzer.co.kr/api/lottie/$file
            done

      - name: Setup Lottie Jsons
        run: |
            mkdir -p ./app/src/main/res/raw
            lottie_jsons=(
              "christmasbell.json"
              "clouds.json"
              "firework.json"
              "firework_2.json"
              "flowers.json"
              "greyscalechristmas.json"
              "greyscalenotes.json"
              "greyscalerain.json"
              "moon.json"
              "shootingstar.json"
              "snowfalling.json"
              "wreath.json"          
            )
            for file in "${lottie_jsons[@]}"; do
              curl -u asu1:${{ secrets.PASSWORD }} -o ./app/src/main/res/raw/$file https://quizzer.co.kr/api/lottie/$file
            done

      - name: Build with Gradle
        run: ./gradlew build
        env:
            KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
            KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
            KEY_STORE: ${{ github.workspace }}/KEYSTORE_NAME.jks
            STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
            PASSWORD: ${{ secrets.PASSWORD }}
            GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}

      - name: Run UI test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: default
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew connectedCheck
          disable-animations: true

      - name: Build Release AAB
        run: ./gradlew bundleRelease -PversionCode=$VERSION_CODE
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_STORE: ${{ github.workspace }}/KEYSTORE_NAME.jks
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          PASSWORD: ${{ secrets.PASSWORD }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}

      - name: Upload AAB
        id: uploadArtifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: app_$VERSION_CODE
          path: app/build/outputs/bundle/release/app-release.aab

      - name: Create service_account.json
        id: createServiceAccount
        run: echo '${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}' > service_account.json

#      NOT YET TO BE DEPLOYED
#      - name: Deploy to Google Play Store
#        id: deploy
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJson: service_account.json
#          packageName: com.asu1.quizzer
#          status: completed
#          releaseFiles: app/build/outputs/bundle/release/app-release.aab
#          track: internal

      - name: Send Email with CI Results
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.example.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: CI Results for ${{ github.repository }}
          body: |
            CI build for ${{ github.repository }} has completed.
            - Job status: ${{ job.status }}
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref }}
          to: recipient@example.com
          from: sender@example.com